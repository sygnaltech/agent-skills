#!/usr/bin/env node

/**
 * CLI for generating agent skill files
 */

const { generate, listSources } = require('../src/index');
const { version } = require('../package.json');

// Parse command line arguments
const args = process.argv.slice(2);
const command = args[0];
const sources = args.slice(1);

// Command handlers
async function handleGenerate() {
  if (sources.length === 0) {
    console.error('Error: Please specify at least one documentation source');
    console.log(`Available sources: ${listSources().join(', ')}`);
    console.log('\nUsage: agent-skills generate <source1> [source2] [...]');
    process.exit(1);
  }

  try {
    for (const source of sources) {
      console.log(`\nGenerating: ${source}`);
      console.log('='.repeat(50));
      await generate(source);
    }
    console.log('\nâœ“ All generators completed successfully');
    process.exit(0);
  } catch (err) {
    console.error('Generation failed:', err.message);
    process.exit(1);
  }
}

function handleList() {
  console.log('Available documentation sources:');
  listSources().forEach(src => console.log(`  - ${src}`));
}

function showVersion() {
  console.log(`agent-skills v${version}`);
}

function showHelp() {
  console.log(`
Agent Skills Generator v${version}
==================================

Usage:
  agent-skills generate <source1> [source2] [...]
  agent-skills list
  agent-skills help
  agent-skills --version

Commands:
  generate <sources...>  Generate skill files from one or more documentation sources
  list                   List available documentation sources
  help                   Show this help message
  --version, -v          Show version number

Examples:
  agent-skills generate webflow-cloud
  agent-skills generate webflow-cloud webflow-code-components
  agent-skills list
  agent-skills -v
  `);
}

// Route commands
switch (command) {
  case 'generate':
    handleGenerate();
    break;
  case 'list':
    handleList();
    break;
  case 'help':
  case '--help':
  case '-h':
    showHelp();
    break;
  case '--version':
  case '-v':
    showVersion();
    break;
  default:
    console.error(`Unknown command: ${command || '(none)'}`);
    showHelp();
    process.exit(1);
}
